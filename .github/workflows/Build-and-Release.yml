name: Build and Release

on:
  push:
    branches: [ main ]
    paths-ignore:
    - README.md
    - .gitignore

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Get python version
      run: |
        $PYTHON_VERSION=$(cat .python-version)
        Add-Content -Path $env:GITHUB_ENV -Value "PYTHON_VERSION=$PYTHON_VERSION"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip cache purge
        pip install --no-cache-dir -U -r requirements.txt

    - name: Build executable
      run: pyinstaller -F -w -n "classhelper.exe" --add-data "assets;assets" main.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: classhelper.exe
        path: dist/classhelper.exe

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Get version
      run: |
        echo "import src.config" > tmp.py
        echo "print(src.config.VERSION, end='')" >> tmp.py
        VERSION=$(python tmp.py)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: classhelper.exe
        path: classhelper_${{env.VERSION}}_${{github.run_number}}.exe
      
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v0.1.13
      with:
        files: classhelper_${{env.VERSION}}_${{github.run_number}}.exe
        tag_name: ${{env.VERSION}}_${{github.run_number}}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}